"use strict";(self.webpackChunkalgorithm_doc=self.webpackChunkalgorithm_doc||[]).push([[309],{2375:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>u,data:()=>k});var e=a(641);const t={id:"跳跃游戏ii",tabindex:"-1"},p={class:"header-anchor",href:"#跳跃游戏ii"},o=(0,e.Fv)('<h2 id="题目描述" tabindex="-1"><a class="header-anchor" href="#题目描述"><span>题目描述</span></a></h2><p>给定一个长度为 <code>n</code> 的 <code>0</code> 索引整数数组 nums。初始位置为 <code>nums[0]</code>。</p><p>每个元素 <code>nums[i]</code> 表示从索引 i 向前跳转的最大长度。换句话说，如果你在 <code>nums[i]</code> 处，你可以跳转到任意 <code>nums[i + j]</code> 处:</p><ul><li><code>0 &lt;= j &lt;= nums[i]</code></li><li><code>i + j &lt; n</code></li></ul><p>返回到达 <code>nums[n - 1]</code> 的最小跳跃次数。生成的测试用例可以到达 <code>nums[n - 1]</code>。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><blockquote><p>输入: nums = [2,3,1,1,4]</p><p>输出: 2</p><p>解释: 跳到最后一个位置的最小跳跃数是 2。</p><p>从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。</p></blockquote>',7),c={id:"试一试",tabindex:"-1"},l={class:"header-anchor",href:"#试一试"},i={href:"https://leetcode.cn/problems/jump-game-ii/submissions/521374928?envType=study-plan-v2&envId=top-interview-150",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Fv)('<h3 id="分析" tabindex="-1"><a class="header-anchor" href="#分析"><span>分析</span></a></h3><ul><li><p>维护一个 <code>step</code> ，作为跳跃次数</p></li><li><p>维护一个 <code>maxPosition</code> ，作为当前的最远跳跃距离</p></li><li><p>维护一个 <code>end</code> ，作为当前这一次跳跃的落点位置</p></li><li><p>遍历数组 <code>nums</code> ，在到达落点位置 <code>end</code> 时，选择当前的最远跳跃距离 <code>maxPosition</code> 作为下一跳的落点，增加跳跃次数 <code>step</code></p></li><li><p>落点位置 <code>end</code> 到达或超过终点时，即为结束，返回跳跃次数 <code>step</code></p></li></ul><h3 id="解答" tabindex="-1"><a class="header-anchor" href="#解答"><span>解答</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>\n * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>\n */</span>\n<span class="token keyword">var</span> <span class="token function-variable function">jump</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> step <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// 跳跃次数</span>\n        <span class="token keyword">let</span> maxPosition <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// 当前的最远跳跃距离</span>\n        <span class="token keyword">let</span> end <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// 当前这一次跳跃的落点位置</span>\n        <span class="token keyword">let</span> totalLength <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// 终点位置</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            maxPosition <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxPosition<span class="token punctuation">,</span> i <span class="token operator">+</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//更新当前的最远跳跃距离</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">===</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 遍历到当前这一跳的落点位置</span>\n                end <span class="token operator">=</span> maxPosition <span class="token comment">// 选择当前的最远跳跃距离maxPosition作为下一跳的落点</span>\n                step<span class="token operator">++</span> <span class="token comment">// 增加跳跃次数</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">&gt;=</span> totalLength<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//落点位置end到达或超过终点时，即为结束</span>\n                    <span class="token keyword">break</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> step\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',4),d={},u=(0,a(6262).A)(d,[["render",function(n,s){const a=(0,e.g2)("Badge"),d=(0,e.g2)("ExternalLinkIcon");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.Lk)("h1",t,[(0,e.Lk)("a",p,[(0,e.Lk)("span",null,[(0,e.eW)("跳跃游戏Ⅱ "),(0,e.bF)(a,{text:"中等",type:"warning"})])])]),o,(0,e.Lk)("h3",c,[(0,e.Lk)("a",l,[(0,e.Lk)("span",null,[(0,e.Lk)("a",i,[(0,e.eW)("试一试"),(0,e.bF)(d)])])])]),r])}]]),k=JSON.parse('{"path":"/algorithm/array_string/article10.html","title":"跳跃游戏Ⅱ","lang":"zh_CN","frontmatter":{},"headers":[{"level":2,"title":"题目描述","slug":"题目描述","link":"#题目描述","children":[{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"试一试","slug":"试一试","link":"#试一试","children":[]},{"level":3,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":3,"title":"解答","slug":"解答","link":"#解答","children":[]}]}],"git":{"updatedTime":1713432413000,"contributors":[{"name":"颜豪","email":"2825060856@qq.com","commits":2}]},"filePathRelative":"algorithm/array_string/article10.md"}')}}]);